{
  "info": {
    "name": "LexMind - Test Data Setup",
    "description": "Collection to populate test data for comprehensive API testing",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "1. Login as Admin",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('access_token', response.access_token);",
              "    console.log('✅ Admin login successful');",
              "} else {",
              "    console.log('❌ Admin login failed');",
              "}"
            ]
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": [
            {
              "key": "username",
              "value": "admin",
              "type": "text"
            },
            {
              "key": "password", 
              "value": "admin123",
              "type": "text"
            }
          ]
        },
        "url": {
          "raw": "{{base_url}}/auth/login",
          "host": ["{{base_url}}"],
          "path": ["auth", "login"]
        }
      }
    },
    {
      "name": "2. Setup GDPR Regulations",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "if (pm.response.code === 200) {",
              "    console.log('✅ GDPR regulation created');",
              "} else {",
              "    console.log('❌ Failed to create GDPR regulation');",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"source\": \"GDPR\",\n  \"title\": \"General Data Protection Regulation\",\n  \"section\": \"Article 32 - Security of Processing\",\n  \"text\": \"Taking into account the state of the art, the costs of implementation and the nature, scope, context and purposes of processing as well as the risk of varying likelihood and severity for the rights and freedoms of natural persons, the controller and the processor shall implement appropriate technical and organisational measures to ensure a level of security appropriate to the risk, including inter alia as appropriate: (a) the pseudonymisation and encryption of personal data; (b) the ability to ensure the ongoing confidentiality, integrity, availability and resilience of processing systems and services; (c) the ability to restore the availability and access to personal data in a timely manner in the event of a physical or technical incident; (d) a process for regularly testing, assessing and evaluating the effectiveness of technical and organisational measures for ensuring the security of the processing.\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/ingest/reg",
          "host": ["{{base_url}}"],
          "path": ["ingest", "reg"]
        }
      }
    },
    {
      "name": "3. Setup SOX Regulations",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"source\": \"SOX\",\n  \"title\": \"Sarbanes-Oxley Act\",\n  \"section\": \"Section 404 - Internal Controls\",\n  \"text\": \"Management shall establish and maintain an adequate internal control structure and procedures for financial reporting. The company's auditor shall attest to, and report on, the assessment made by the management of the company and the effectiveness of the internal control structure and procedures.\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/ingest/reg",
          "host": ["{{base_url}}"],
          "path": ["ingest", "reg"]
        }
      }
    },
    {
      "name": "4. Setup Company Privacy Policy",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "if (pm.response.code === 200) {",
              "    console.log('✅ Privacy policy document created');",
              "} else {",
              "    console.log('❌ Failed to create privacy policy');",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"path\": \"privacy-policy.md\",\n  \"content\": \"# Privacy Policy\\n\\n## Data Collection\\nOur company collects personal data including names, email addresses, phone numbers, and usage information from our customers and website visitors.\\n\\n## Security Measures\\nWe implement multiple layers of security including:\\n- AES-256 encryption for data at rest\\n- TLS 1.3 for data in transit\\n- Role-based access controls\\n- Regular security audits and penetration testing\\n- Multi-factor authentication for admin access\\n\\n## Data Retention\\nPersonal data is retained for the minimum period necessary to fulfill the purposes for which it was collected, typically no longer than 7 years unless required by law.\\n\\n## User Rights\\nUsers have the right to access, rectify, erase, restrict processing, and port their personal data in accordance with applicable data protection laws.\",\n  \"chunk_idx\": 0\n}"
        },
        "url": {
          "raw": "{{base_url}}/ingest/doc",
          "host": ["{{base_url}}"],
          "path": ["ingest", "doc"]
        }
      }
    },
    {
      "name": "5. Setup IT Security Policy",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"path\": \"it-security-policy.md\",\n  \"content\": \"# IT Security Policy\\n\\n## Access Control\\nAll systems require multi-factor authentication. User access is granted on a principle of least privilege basis and reviewed quarterly.\\n\\n## Encryption Standards\\n- All data must be encrypted using AES-256 or equivalent\\n- Database encryption is mandatory for all production systems\\n- Backup data must be encrypted both in transit and at rest\\n\\n## Network Security\\n- Firewalls are configured to block all unnecessary ports\\n- VPN access is required for remote connections\\n- Network traffic is monitored 24/7\\n\\n## Incident Response\\nSecurity incidents must be reported within 1 hour of discovery. Our incident response team follows NIST guidelines for containment, eradication, and recovery.\",\n  \"chunk_idx\": 0\n}"
        },
        "url": {
          "raw": "{{base_url}}/ingest/doc",
          "host": ["{{base_url}}"],
          "path": ["ingest", "doc"]
        }
      }
    },
    {
      "name": "6. Setup Financial Controls Manual",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"path\": \"financial-controls.md\",\n  \"content\": \"# Financial Controls Manual\\n\\n## Internal Controls Framework\\nOur organization follows the COSO framework for internal controls over financial reporting.\\n\\n## Segregation of Duties\\n- Transaction initiation and approval are performed by different individuals\\n- Accounting records are maintained separately from asset custody\\n- Regular reconciliations are performed by independent parties\\n\\n## Authorization Limits\\n- Purchases over $10,000 require CFO approval\\n- Purchases over $50,000 require CEO approval\\n- All wire transfers require dual authorization\\n\\n## Documentation Requirements\\nAll financial transactions must be supported by appropriate documentation and retained for 7 years in accordance with regulatory requirements.\",\n  \"chunk_idx\": 0\n}"
        },
        "url": {
          "raw": "{{base_url}}/ingest/doc",
          "host": ["{{base_url}}"],
          "path": ["ingest", "doc"]
        }
      }
    },
    {
      "name": "7. Create Coverage Mappings",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "if (pm.response.code === 200) {",
              "    console.log('✅ Coverage mapping created');",
              "} else {",
              "    console.log('❌ Failed to create coverage mapping');",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"reg_id\": 1,\n  \"doc_id\": 1,\n  \"confidence\": 0.95\n}"
        },
        "url": {
          "raw": "{{base_url}}/mappings",
          "host": ["{{base_url}}"],
          "path": ["mappings"]
        }
      }
    },
    {
      "name": "8. Verify Test Data",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Test data setup verification', () => {",
              "    pm.response.to.have.status(200);",
              "    const response = pm.response.json();",
              "    pm.expect(response.documents.length).to.be.greaterThan(0);",
              "    console.log(`✅ Setup complete! Found ${response.documents.length} documents`);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/documents?limit=10",
          "host": ["{{base_url}}"],
          "path": ["documents"],
          "query": [
            {
              "key": "limit",
              "value": "10"
            }
          ]
        }
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000"
    },
    {
      "key": "access_token",
      "value": ""
    }
  ]
}